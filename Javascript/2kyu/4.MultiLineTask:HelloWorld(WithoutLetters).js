$
  =
  [
  ]
  +
  !
  1
  +
  {
  }
_
  =
  [
  ]
  +
  [
  ]
  [
  1
  ]
  +
  !
  0
_
  =
  $
  [
  5
  +
  5
  ]
  +
  $
  [
  6
  ]
  +
  _
  [
  1
  ]
  +
  $
  [
  3
  ]
  +
  $
  [
  5
  +
  6
  ]
  +
  _
  [
  5
  +
  5
  ]
  +
  _
  [
  0
  ]
  +
  $
  [
  5
  +
  5
  ]
  +
  _
  [
  9
  ]
  +
  $
  [
  6
  ]
  +
  _
  [
  5
  +
  5
  ]
$
  =
  [
  ]
  +
  _
  [
  _
  ]
$
  =
  _
  [
  4
  ]
  +
  _
  [
  1
  ]
  +
  $
  [
  9
  ]
  +
  _
  [
  4
  ]
  +
  _
  [
  5
  ]
  +
  $
  [
  5
  ]
  +
  _
  [
  2
  ]
  +
  $
  [
  7
  +
  7
  ]
$
  =
  (
    5
    *
    5
  )
  [
    $
  ]
    (
      5
      *
      5
      +
      1
    )
  +
  !
  0
_
  =
  [
    _
    [
    3
    ]
    +
    _
    [
    1
    ]
    +
    $
    [
    2
    ]
    +
    $
    [
    1
    ]
    ,
    _
    ,
    $
    [
    2
    ]
    +
    $
    [
    4
    ]
    +
    $
    [
    1
    ]
    +
    _
    [
    6
    ]
    +
    $
    [
    2
    ]
    +
    _
    [
    2
    ]
    +
    (
      [
      ]
      +
      {
      }
    )
    [
    7
    ]
    ,

    $
    [
    4
    ]
    +
    _
    [
    3
    ]
    +
    _
    [
    0
    ]
    +
    (
      [
      ]
      +
      !
      1
    )
    [
    1
    ]
    +
    $
    [
    0
    ]
    +
    $
    [
    4
    ]
  ]
$
  =
  [
  ]
  [
  _
  [
  0
  ]
  ]
  [
  _
  [
  1
  ]
  ]
_
[
  4
]
  =
  $
    (
      _
      [
      2
      ]
      +
      _
      [
      3
      ]
    )
    (
    )
    (
      (
        [
        ]
        +
        {
        }
      )
      [
      0
      ]
    )
  [
  0
  ]
_
[
  5
]
  =
  $
$
  =
  $
    (
      _
      [
      2
      ]
      +
      _
      [
      2
      ]
      [
      3
      ]
      +
      _
      [
      2
      ]
      [
      5
      ]
      +
      _
      [
      3
      ]
    )
    (
    )
$
  =
  $
    (
      _
      [
      4
      ]
      +
      6
      *
      8
    )
  +
  $
    (
      _
      [
      4
      ]
      +
      7
      *
      3
    )
  +
  $
    (
      _
      [
      4
      ]
      +
      2
      +
      _
      [
      1
      ]
      [
      0
      ]
    )
  +
  $
    (
      _
      [
      4
      ]
      +
      7
      *
      (
        5
        +
        6
      )
    )
  +
  $
    (
      _
      [
      4
      ]
      +
      3
      *
      9
    )
  +
  (
    [
    ]
    +
    !
    1
  )
  +
  _
  [
  0
  ]
$
  =
  _
  [
    5
  ]
    (
      _
      [
      2
      ]
      +
      $
      [
      4
      ]
      +
      $
      [
      0
      ]
      +
      $
      [
      9
      ]
      +
      $
      [
      7
      ]
      +
      $
      [
      7
      ]
      +
      $
      [
      5
      +
      6
      ]
      +
      $
      [
      2
      ]
      +
      _
      [
      2
      ]
      [
      6
      ]
      +
      $
      [
      3
      ]
      +
      $
      [
      5
      +
      6
      ]
      +
      $
      [
      6
      +
      6
      ]
      +
      $
      [
      7
      ]
      +
      (
        [
        ]
        +
        [
        ]
        [
        1
        ]
      )
      [
      2
      ]
      +
      $
      [
      1
      ]
      +
      $
      [
      4
      ]
    )


/*
=====SOAL======
You are provided with:

let $ = 'CSg';

You need to change $ into a function that returns the string 'Hello, world!'.

Requirements:

    Every line must have at most 1 ASCII character
    You are only allowed to use numbers (0-9) and special characters (!+<[, etc.)
    NO LETTERS ALLOWED (a-z)! Mwhahaha
    NO UNICODE CHARACTERS
    700 lines or less

This is based on Voile's previous Multi Line Task puzzles:

    https://www.codewars.com/kata/5935558a32fb828aad001213
    https://www.codewars.com/kata/59a421985eb5d4bb41000031
*/
/*
CARA ORANG LAIN
1. ======>
2. ======>
3. ======>
*/